<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TrainApp">

    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Colors.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Hoverless" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        
        <Setter Property="Template">


            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding }">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>


            </Setter.Value>


        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
            
                    <Setter Property="Background" Value="Transparent"/>

            </Trigger>
            
            
            
        </Style.Triggers>
        
    </Style>

    <Style x:Key="ro" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Template">


            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding }" CornerRadius="23">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>


            </Setter.Value>


        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="Transparent"/>
            

            </Trigger>



        </Style.Triggers>

    </Style>

    <Style x:Key="MorningStar" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" 
                Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15 10"/>
        <Setter Property="Foreground"
                Value="{StaticResource Soft White}"/>


        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding }">
                       
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>


            </Setter.Value>


        </Setter>


        <Style.Triggers>
            <Trigger  Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="{StaticResource sdb}">

                </Setter>

                <Setter Property="Foreground" Value="{StaticResource White}"/>


            </Trigger>

        </Style.Triggers>



    </Style>



    <Style x:Key="Cross" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" 
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{StaticResource White}"/>


        <Setter Property="Padding" Value="15 10"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding }">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>


            </Setter.Value>


        </Setter>


        <Style.Triggers>
            <Trigger  Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="{StaticResource BrightRed}">
                    
                </Setter>
                <Setter Property="Foreground" Value="{StaticResource White}"/>


            </Trigger>
            
        </Style.Triggers>
        
        
        
    </Style>

    <Style x:Key="WhtBorder" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource Light Grey}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}" UseLayoutRounding="True"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                            
                            >

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark Grey}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark Grey}"/>
                <Setter Property="Foreground" Value="Black"/>

            </Trigger>

        </Style.Triggers>



    </Style>

    <!-- Rounded -->
    <Style x:Key="Blury" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource Messenger Blue}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}" UseLayoutRounding="True"
                            
                            >
                       
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>

            </Trigger>

        </Style.Triggers>



    </Style>

    <Style x:Key="GrayOne" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource White}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource Cyanic}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUIReg}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}"  UseLayoutRounding="True" SnapsToDevicePixels="True"
                            
                            
                            >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="1" Color="{StaticResource aaac}" Opacity="0.2">

                            </DropShadowEffect>
                        </Border.Effect>
                        
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark White}"/>



            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Soft White}"/>

            </Trigger>

        </Style.Triggers>



    </Style>

    <Style x:Key="GrayTwo" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUIReg}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}"
                            
                            >
                      
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark White}"/>



            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Soft White}"/>

            </Trigger>

        </Style.Triggers>



    </Style>

    <Style x:Key="WindowsOfficial" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource Dark White}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource Dark Cyanide}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUIReg}"/>
       
        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="12" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource Light Grey}"
                            
                            >

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Azure"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>



            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Azure"/>
                <Setter Property="Foreground" Value="{StaticResource Soft White}"/>

            </Trigger>

        </Style.Triggers>



    </Style>

    <!-- Rounded -->
    <Style x:Key="RedRounded" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource BrightRed}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}"  UseLayoutRounding="True"
                            
                            
                            >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="6" ShadowDepth="1" Color="{StaticResource ddd}" Opacity="0.4">

                            </DropShadowEffect>
                        </Border.Effect>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Messenger Blue}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>

            </Trigger>

        </Style.Triggers>



    </Style>

    <!-- Rounded -->
    <Style x:Key="RedRounded-1" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15"
                            
                            >

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity="0.8" >

                                <GradientStop Color="{StaticResource ThemedColor}" Offset="1"></GradientStop>
                                <GradientStop Offset="0" Color="{StaticResource Feel Orange}"></GradientStop>


                            </LinearGradientBrush>
                        </Border.Background>
                        
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Messenger Blue}"/>
                <Setter Property="Foreground" Value="{StaticResource Cyanic}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>

            </Trigger>

        </Style.Triggers>



    </Style>


    <!-- Rounded -->
    <Style x:Key="Rounded" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource Themed}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border  Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}"  UseLayoutRounding="True"
                            
                            
                            >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="6" ShadowDepth="1" Color="{StaticResource ddd}" Opacity="0.4">

                            </DropShadowEffect>
                        </Border.Effect>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>
                    
                </ControlTemplate>
                
            </Setter.Value>
            
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark Grey}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>

            </Trigger>

        </Style.Triggers>



    </Style>


    <Style x:Key="Navbar-1" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource Messenger Blue}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border  Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}"
                            >
                     
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark Grey}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>

            </Trigger>

        </Style.Triggers>



    </Style>


    <!-- Rounded -->
    <Style x:Key="Springboot" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource SpringBoot}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}" UseLayoutRounding="True"
                            
                            
                            >
                        
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>
          

            </Trigger>

        </Style.Triggers>



    </Style>

    <Style x:Key="Tur" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="#dc30D5C8"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource White}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}"
                            
                            >

                        <ContentPresenter HorizontalAlignment="Center"></ContentPresenter>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark White}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>


            </Trigger>

        </Style.Triggers>



    </Style>

    <!-- Rounded -->
    <Style x:Key="Navbar-2" TargetType="{x:Type Button}" BasedOn="{StaticResource BasicStyle}">
        <Setter Property="Background" Value="{StaticResource White}"/>
        <Setter Property="Padding" Value="13 8"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource SpringBoot}"/>

        <Setter Property="Template" >
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Namo_Sidekick" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                            CornerRadius="15" Background="{TemplateBinding Background}"
                            
                            >

                        <ContentPresenter HorizontalAlignment="Center"></ContentPresenter>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Soft White}"/>


            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Light Grey}"/>
                <Setter Property="Foreground" Value="{StaticResource Dark Grey}"/>


            </Trigger>

        </Style.Triggers>



    </Style>


    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" BorderBrush="{StaticResource Dark White}"
                            BorderThickness="1" Margin="1" Background="Transparent" SnapsToDevicePixels="true" CornerRadius="3"
                            >
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="DarkGray"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="{StaticResource ContrastXox}"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="{StaticResource ddd}"/>
    
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" Background="{DynamicResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                            CornerRadius="2" Margin="6 0" Opacity="0.6" BorderThickness="0" BorderBrush="{StaticResource Dark Grey}"
                            Width="{TemplateBinding Width}">
                    
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="true">
                            <Setter Property="Margin" TargetName="rectangle" Value="0 1"/>
                            <Setter Property="Margin"  TargetName="rectangle" Value="1 0"/>
                            <Setter Property="CornerRadius" TargetName="rectangle" Value="4"/>
                        </Trigger>

                        <Trigger  Property="IsMouseCaptured" Value="true">
                            <Setter Property="Margin"  TargetName="rectangle" Value="1 0"/>
                            <Setter Property="CornerRadius" TargetName="rectangle" Value="4"/>
                            <Setter Property="BorderThickness" Value="1" TargetName="rectangle"/>


                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" Background="{DynamicResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                            CornerRadius="2" Margin="0 6" Opacity="0.6" BorderThickness="0" BorderBrush="{StaticResource Dark Grey}"
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="true">
                            <Setter Property="Margin"  TargetName="rectangle" Value="0 1"/>
                            <Setter Property="Margin" TargetName="rectangle" Value="0 1"/>
                            <Setter Property="CornerRadius" TargetName="rectangle" Value="4"/>
                        </Trigger>

                        <Trigger  Property="IsMouseCaptured" Value="true">
                            <Setter Property="Margin"  TargetName="rectangle" Value="0 1"/>
                            <Setter Property="CornerRadius" TargetName="rectangle" Value="4"/>
                            <Setter Property="BorderThickness" Value="1" TargetName="rectangle"/>


                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0,0"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent" Opacity="6.0">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                       
                      
                        
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                          
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                            </Track.Thumb>
                        </Track>
                       
                      
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                           
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                           
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                           
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                           
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="BorderThickness" Value="0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}" >
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Opacity="0.6">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                            
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}" >
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    
                                    
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    
                                    
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                    </Track.Thumb>
                                    
                                    
                                </Track>
                             
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                  
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                   
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                   
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                  
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="ScVwer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
               
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                       AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"  Style="{StaticResource ScrollBarStyle1}"
                                       Grid.Row="0" Background="Transparent" 
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       ViewportSize="{TemplateBinding ViewportHeight}"/>
                           
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource ScrollBarStyle1}"
                                       Background="Transparent"
                                       AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" VerticalAlignment="Bottom" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                  
                </ControlTemplate>
            </Setter.Value>
            
        </Setter>
        
    </Style>

    <Style x:Key="ScVwerGrey"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                       AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"  Style="{StaticResource ScrollBarStyle1}"
                                       Grid.Row="0" Background="Transparent" 
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       ViewportSize="{TemplateBinding ViewportHeight}"/>

                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource ScrollBarStyle1}"
                                       Background="Transparent"
                                       AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>





</ResourceDictionary>